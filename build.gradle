plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
}

group 'org.quiltmc'
version '1.0-SNAPSHOT'

// Target JDK 8
tasks.withType(JavaCompile).configureEach {
    if (JavaVersion.current().isJava9Compatible()) {
        options.release.set(8)
    } else {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }
}

application {
    mainClass = 'org.quiltmc.mappings_hasher.Main'
}

repositories {
    mavenCentral()
    maven {
        name = "Quilt"
        url = "https://maven.quiltmc.org/repository/release"
    }
}

dependencies {
    implementation 'org.quiltmc:quilt-json5:1.0.0'
    implementation 'org.quiltmc:lorenz-tiny:3.0.0'
    implementation 'org.cadixdev:lorenz-io-proguard:0.5.6'
    implementation "org.ow2.asm:asm:9.1"
}

tasks.getByName("run").setArgsString(minecraftVersion)

String minecraftVersion2 = minecraftVersion.toString().contains('/') ?
        minecraftVersion.toString().substring(minecraftVersion.toString().lastIndexOf('/') + 1)
                .replaceAll('1_(\\d*)', '1.$1').replace('.json', '')
        : minecraftVersion

task mappingsJar(type: Jar) {
    dependsOn run
    from "mappings/hashed-${minecraftVersion2}.tiny"
    eachFile {
        setName("hashed/mappings.tiny")
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = 'org.quiltmc'
            artifactId = 'hashed-mojmap'
            version = minecraftVersion2
            artifacts = [mappingsJar]
        }
    }
    repositories {
        def ENV = System.getenv()

        if (ENV.MAVEN_URL) {
            maven {
                url = ENV.MAVEN_URL

                credentials {
                    username = ENV.MAVEN_USERNAME
                    password = ENV.MAVEN_PASSWORD
                }
            }
        }
    }
}